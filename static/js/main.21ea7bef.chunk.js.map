{"version":3,"sources":["components/MainMenu.js","data/fillers.js","data/list.js","components/FillerWord.js","components/GrammarianSheet.js","App.js","serviceWorker.js","index.js"],"names":["MainMenu","_Component","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","value","_this","react_default","a","createElement","Navbar","fluid","inverse","collapseOnSelect","defaultExpanded","Header","Brand","href","Nav","NavDropdown","title","class","onToggle","handleDropDown","data","list","map","speaker","MenuItem","eventKey","id","onClick","handleSelect","Component","fillers","filler","count","speakers","name","fillerCounts","assign","FillerWord","context","addCount","bind","assertThisInitialized","minusCount","saveState","state","setState","onFillerCountChange","currentFiller","_this2","FormGroup","Grid","Row","Col","xs","md","sm","Button","bsSize","bsStyle","getStyle","block","Glyphicon","glyph","GrammarianSheet","handleChange","fillerCountChange","findFillerIndex","onGrammarianSheetChange","e","target","findIndex","f","i","currentSpeaker","Form","inline","ControlLabel","FormControl","type","placeholder","onChange","FillerWord_FillerWord","App","dropDownOpen","handleRoleChange","prevState","console","log","className","MainMenu_MainMenu","GrammarianSheet_GrammarianSheet","handleGrammarianSheetChange","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.21ea7bef.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {NavDropdown, Navbar, MenuItem, Nav} from 'react-bootstrap';\nimport '../assets/css/bootstrap.min.css';\nimport '../assets/css/bootstrap-theme.min.css';\n\nexport class MainMenu extends Component {\n\n  constructor(props) {\n    super(props)\n  }\n\n\n  render() {\n    return (\n      <Navbar fluid inverse collapseOnSelect defaultExpanded>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <a href=\"#\">Grammarian Filler Word Counter</a>\n          </Navbar.Brand>\n        </Navbar.Header>\n          <Nav>\n        <NavDropdown title=\"Speakers\" class=\"dropdown-menu\" onToggle={() => this.props.handleDropDown()}>\n          {\n            this.props.data.list.map((speaker) => {\n              return <MenuItem eventKey={1 + (speaker.id/10)} onClick={\n                () => {\n                  this.props.handleSelect(speaker.id)\n                }\n              }>\n                {speaker.title}\n              </MenuItem>\n            })\n          }\n        </NavDropdown>\n        </Nav>\n      </Navbar>\n    )\n  }\n}","export const fillers = {\n  list: [\n    {filler: 'Ah', count: 0},\n    {filler: 'Um', count: 0},\n    {filler: 'Well', count: 0},\n    {filler: 'So', count: 0},\n    {filler: 'But', count: 0},\n    {filler: 'And', count: 0},\n    {filler: 'Like', count: 0},\n    {filler: 'You Know', count: 0},\n    {filler: 'Repeat', count: 0},\n    {filler: 'Other', count: 0},\n    {filler: 'Word Of The Day', count: 0}\n  ]\n};","import {fillers} from './fillers';\n\nexport const speakers = {\n  list: [\n    {\n      id: 1,\n      title: \"Presiding Officer\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    },\n    {\n      id: 2,\n      title: \"Jock/Chuckle\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    },\n    {\n      id: 3,\n      title: \"Toastmaster\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    },\n    {\n      id: 4,\n      title: \"Speaker 1\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    },\n    {\n      id: 5,\n      title: \"Speaker 2\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    },\n    {\n      id: 6,\n      title: \"Speaker 3\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    },\n    {\n      id: 7,\n      title: \"Table Topic Master\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    },\n    {\n      id: 8,\n      title: \"TT Speaker 1\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    },\n    {\n      id: 9,\n      title: \"TT Speaker 2\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    },\n    {\n      id: 10,\n      title: \"TT Speaker 3\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    },\n    {\n      id: 11,\n      title: \"TT Speaker 4\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    },\n    {\n      id: 12,\n      title: \"TT Speaker 5\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    },\n    {\n      id: 13,\n      title: \"TT Speaker 6\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    },\n    {\n      id: 14,\n      title: \"TT Speaker 7\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    },\n    {\n      id: 15,\n      title: \"TT Speaker 8\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    },\n    {\n      id: 16,\n      title: \"General Evaluator\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    },\n    {\n      id: 17,\n      title: \"Evaluator 1\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    },\n    {\n      id: 18,\n      title: \"Evaluator 2\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    },\n    {\n      id: 19,\n      title: \"Evaluator 3\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    },\n    {\n      id: 20,\n      title: \"Timer\",\n      name:'',\n      fillerCounts:fillers.list.map(a => Object.assign({}, a))\n    }\n  ]\n};\n","import React, {Component} from 'react';\nimport {FormGroup, Col, Glyphicon, Button, Grid, Row} from 'react-bootstrap';\n\n\nexport class FillerWord extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.addCount = this.addCount.bind(this);\n    this.minusCount = this.minusCount.bind(this);\n    this.saveState = this.saveState.bind(this);\n\n    this.state = {\n      filler: props.filler\n    };\n\n  }\n\n  saveState(filler) {\n    this.setState({filler: filler});\n    this.props.onFillerCountChange(filler);\n  }\n\n  static getStyle(count) {\n    if (count < 5) return 'success';\n    if (count < 10) return 'warning';\n    return 'danger';\n  }\n\n\n  addCount() {\n    let currentFiller = this.props.filler;\n    currentFiller.count++;\n    this.saveState(currentFiller);\n  }\n\n  minusCount() {\n    let currentFiller = this.props.filler;\n    if (currentFiller.count === 0) return;\n    currentFiller.count--;\n    this.saveState(currentFiller);\n  }\n\n  render() {\n    return  <FormGroup>\n      <Grid>\n        <Row>\n          <Col xs={11} md={11} sm={11}>\n            <Button bsSize=\"large\" bsStyle={FillerWord.getStyle(this.props.filler.count)} onClick={() => {\n              this.addCount(this.props.filler)\n            }} block>\n\n              <Glyphicon glyph=\"plus-sign\"/> {this.props.filler.filler} ({this.props.filler.count})\n            </Button>\n          </Col>\n          <Col xs={1} md={1} sm={1}>\n            <Button bsSize=\"large\" bsStyle='warning' onClick={() => {\n              this.minusCount(this.props.filler)\n            }} >\n              <Glyphicon glyph=\"minus-sign\"/>\n            </Button>\n          </Col>\n        </Row>\n      </Grid>\n    </FormGroup>\n\n  }\n}","import React, {Component} from 'react';\nimport {Form, FormGroup, Col, FormControl, ControlLabel} from 'react-bootstrap';\nimport {FillerWord} from \"./FillerWord\";\n\n\nexport class GrammarianSheet extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.fillerCountChange = this.fillerCountChange.bind(this);\n    this.findFillerIndex = this.findFillerIndex.bind(this);\n    this.saveState = this.saveState.bind(this);\n\n    this.state = {\n      speaker: props.speaker\n    };\n\n  }\n\n  saveState(speaker) {\n    this.setState({speaker: speaker});\n    this.props.onGrammarianSheetChange(speaker);\n  }\n\n  handleChange(e) {\n    let speaker = this.props.speaker;\n    speaker.name = e.target.value;\n    this.saveState(speaker);\n  }\n\n  findFillerIndex(filler) {\n    return this.props.speaker.fillerCounts.findIndex((f) => {\n      return f.filler === filler.filler\n    });\n  }\n\n\n  fillerCountChange(filler) {\n    const i = this.findFillerIndex(filler);\n    let currentSpeaker = this.props.speaker;\n    currentSpeaker.fillerCounts[i] = filler;\n    this.saveState(currentSpeaker);\n  }\n\n  render() {\n    return (\n      <Form inline>\n        <FormGroup>\n          <Col xs={12} md={12} sm={12}>\n            <FormGroup>\n            <ControlLabel >{this.props.speaker.title}</ControlLabel>\n            <FormControl type='text' bsSize='lg' placeholder={this.props.speaker.title + ' Name'} value={this.props.speaker.name}\n                         onChange={this.handleChange}/>\n            </FormGroup>\n\n          {\n            this.props.speaker.fillerCounts.map((filler) => {\n              return <FillerWord filler={filler} onFillerCountChange={() => this.fillerCountChange(filler)}/>\n            })\n          }\n          </Col>\n      </FormGroup>\n      </Form>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport {MainMenu} from \"./components/MainMenu\";\nimport {speakers} from './data/list'\nimport {GrammarianSheet} from \"./components/GrammarianSheet\";\nimport {Collapse} from 'react-bootstrap'\n\nclass App extends Component {\n  constructor(props,context) {\n    super(props, context);\n    this.state = {\n      currentSpeaker: speakers.list[0],\n      dropDownOpen: false\n    };\n    this.handleRoleChange = this.handleRoleChange.bind(this);\n    this.handleDropDown = this.handleDropDown.bind(this);\n  }\n\n  findIndex(id) {\n    return speakers.list.findIndex((speaker) => {return speaker.id === id});\n  }\n\n  handleDropDown() {\n    this.setState(prevState => ({currentSpeaker: prevState.currentSpeaker, dropDownOpen: !prevState.dropDownOpen}));\n  }\n\n  handleRoleChange(id) {\n    const i = this.findIndex(id);\n    if (i < 0) return;\n    this.setState({currentSpeaker: speakers.list[i]})\n  }\n\n  handleGrammarianSheetChange(speaker) {\n    const i = this.findIndex(speaker.id);\n    if (i < 0) return;\n    speakers.list[i] = speaker;\n    console.log(speaker);\n    this.setState({currentSpeaker: speakers.list[i]})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MainMenu data={speakers} handleSelect={this.handleRoleChange} handleDropDown={() => this.handleDropDown()}/>\n        {!this.state.dropDownOpen ?\n          <GrammarianSheet speaker={this.state.currentSpeaker} onGrammarianSheetChange={(speaker) => this.handleGrammarianSheetChange(speaker)}/> :\n          null }\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}