{"version":3,"sources":["components/MainMenu.js","data/list.js","components/FillerWord.js","components/GrammarianSheet.js","components/OkCancelModel.js","data/roles.js","components/AddSpeaker.js","data/fillers.js","components/RemoveSpeaker.js","App.js","components/Settings.js","routes.js","serviceWorker.js","index.js"],"names":["MainMenu","_this","this","react_default","a","createElement","Navbar","fluid","inverse","collapseOnSelect","defaultExpanded","Header","Brand","href","Toggle","Collapse","Nav","NavDropdown","title","class","onToggle","props","handleDropDown","data","list","map","speaker","MenuItem","eventKey","id","onClick","handleSelect","Grid","Col","sm","md","lg","xs","name","pullRight","NavItem","handleAddSpeaker","Glyphicon","glyph","handleRemoveSpeaker","handleClear","history","push","Component","withRouter","initialSpeakersList","FillerWord","_Component","context","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addCount","bind","assertThisInitialized","minusCount","saveState","state","filler","inherits","createClass","key","value","setState","onFillerCountChange","currentFiller","count","_this2","FormGroup","Row","Button","bsSize","bsStyle","getStyle","block","GrammarianSheet","paddingStyle","grid","paddingLeft","paddingRight","row","marginLeft","marginRight","col","handleChange","fillerCountChange","findFillerIndex","onGrammarianSheetChange","e","target","fillerCounts","findIndex","f","i","currentSpeaker","Form","style","ControlLabel","FormControl","placeholder","onChange","FillerWord_FillerWord","OkCancelModel","apply","arguments","Modal","show","closeButton","Title","modelTitle","Body","modelText","Footer","handleResponse","OkCaption","CancelCaption","roles","role","AddSpeaker","handleNameChange","handleRoleChange","onEntering","prevState","type","inputRef","ref","componentClass","disabled","fillers","RemoveSpeaker","deletePressCount","deleteTimeStart","Date","now","speakerId","handleDelete","handleSpeakerChange","speakers","App","LOCAL_STORAGE_KEY","LOCAL_STORAGE_SPEAKER_INDEX","getInitialSpeakerList","allStates","currentIndex","getInitialSpeakerIndex","dropDownOpen","clearModelShow","addSpeakerShow","removeSpeakerShow","handleClearModelResponse","handleAddSpeakerResponse","handleRemoveSpeakerResponse","savedSpeakers","localStorage","getItem","JSON","parse","stringify","speakerIndex","index","parseInt","length","all","setItem","isOk","clear","newSpeaker","assign","speakerIdTobeRemoved","splice","className","components_MainMenu","react_addons_css_transition_group_default","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","GrammarianSheet_GrammarianSheet","handleGrammarianSheetChange","OkCancelModel_OkCancelModel","AddSpeaker_AddSpeaker","RemoveSpeaker_RemoveSpeaker","Settings","AppRouter","HashRouter","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","routes_AppRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9750896a.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {NavDropdown, Navbar, MenuItem, Nav, Glyphicon, NavItem, Grid, Col} from 'react-bootstrap';\nimport '../assets/css/bootstrap.min.css';\nimport '../assets/css/bootstrap-theme.min.css';\nimport {withRouter} from \"react-router-dom\";\n\n\nclass MainMenu extends Component {\n\n  render() {\n    return (\n      <Navbar fluid inverse collapseOnSelect defaultExpanded>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <a href=\"#\">Grammarian Filler Word Counter</a>\n          </Navbar.Brand>\n          <Navbar.Toggle/>\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <Nav>\n            <NavDropdown title=\"Speakers\" class=\"dropdown-menu\" onToggle={() => this.props.handleDropDown()}>\n              {\n                this.props.data.list.map((speaker) => {\n                  return <MenuItem eventKey={1 + (speaker.id / 10)} onClick={\n                    () => {\n                      this.props.handleSelect(speaker.id)\n                    }\n                  }>\n                    <Grid>\n                      <Col sm={6} md={6} lg={6} xs={6}>\n                        {speaker.title}\n                      </Col>\n                      <Col sm={6} md={6} lg={6} xs={6}>\n                        {speaker.name}\n                      </Col>\n                    </Grid>\n                  </MenuItem>\n                })\n              }\n            </NavDropdown>\n          </Nav>\n          <Nav pullRight>\n            <NavItem onClick={this.props.handleAddSpeaker}>\n              <Glyphicon glyph='plus'/>\n            </NavItem>\n            <NavItem onClick={this.props.handleRemoveSpeaker}>\n              <Glyphicon glyph='minus'/>\n            </NavItem>\n            <NavItem onClick={this.props.handleClear}>\n              <Glyphicon glyph='refresh'/>\n            </NavItem>\n\n              <NavItem onClick={() => this.props.history.push(\"/settings\")}>\n                <Glyphicon glyph='cog'/>\n            </NavItem>\n\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n}\n\nexport default withRouter(MainMenu)","export const initialSpeakersList = {\n  list: [\n  ]\n};\n","import React, {Component} from 'react';\nimport {FormGroup, Col, Glyphicon, Button, Grid, Row} from 'react-bootstrap';\n\n\nexport class FillerWord extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.addCount = this.addCount.bind(this);\n    this.minusCount = this.minusCount.bind(this);\n    this.saveState = this.saveState.bind(this);\n\n    this.state = {\n      filler: props.filler\n    };\n\n  }\n\n  saveState(filler) {\n    this.setState({filler: filler});\n    this.props.onFillerCountChange(filler);\n  }\n\n  static getStyle(count) {\n    if (count < 5) return 'success';\n    if (count < 10) return 'warning';\n    return 'danger';\n  }\n\n\n  addCount() {\n    let currentFiller = this.props.filler;\n    currentFiller.count++;\n    this.saveState(currentFiller);\n  }\n\n  minusCount() {\n    let currentFiller = this.props.filler;\n    if (currentFiller.count === 0) return;\n    currentFiller.count--;\n    this.saveState(currentFiller);\n  }\n\n  render() {\n    return  <FormGroup>\n      <Grid>\n        <Row>\n          <Col xs={10} md={10} sm={10} lg={10}>\n            <Button bsSize=\"large\" bsStyle={FillerWord.getStyle(this.props.filler.count)} onClick={() => {\n              this.addCount(this.props.filler)\n            }} block>\n\n              <Glyphicon glyph=\"plus-sign\"/> {this.props.filler.filler} ({this.props.filler.count})\n            </Button>\n          </Col>\n          <Col xs={2} md={2} sm={2} lg={2}>\n            <Button bsSize=\"large\" bsStyle='warning' onClick={() => {\n              this.minusCount(this.props.filler)\n            }} >\n              <Glyphicon glyph=\"minus-sign\"/>\n            </Button>\n          </Col>\n        </Row>\n      </Grid>\n    </FormGroup>\n\n  }\n}","import React, {Component} from 'react';\nimport {Form, FormGroup, Grid, Col, Row, FormControl, ControlLabel} from 'react-bootstrap';\nimport {FillerWord} from \"./FillerWord\";\n\n\nexport class GrammarianSheet extends Component {\n\n  paddingStyle = {\n    grid: {\n      paddingLeft: 5,\n      paddingRight: 5\n    },\n    row: {\n      marginLeft: 5,\n      marginRight: 5\n    },\n    col: {\n      paddingLeft: 5,\n      paddingRight: 5\n    }\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.fillerCountChange = this.fillerCountChange.bind(this);\n    this.findFillerIndex = this.findFillerIndex.bind(this);\n    this.saveState = this.saveState.bind(this);\n\n  }\n\n  saveState(speaker) {\n    this.props.onGrammarianSheetChange(speaker);\n  }\n\n  handleChange(e) {\n    let speaker = this.props.speaker;\n    speaker.name = e.target.value;\n    this.saveState(speaker);\n  }\n\n  findFillerIndex(filler) {\n    return this.props.speaker.fillerCounts.findIndex((f) => {\n      return f.filler === filler.filler\n    });\n  }\n\n\n  fillerCountChange(filler) {\n    const i = this.findFillerIndex(filler);\n    let currentSpeaker = this.props.speaker;\n    currentSpeaker.fillerCounts[i] = filler;\n    this.saveState(currentSpeaker);\n  }\n\n  render() {\n    return (\n      <Form>\n        <Grid fluid style={this.paddingStyle.grid}>\n        <Row style={this.paddingStyle.row}>\n          <Col xs={12} md={12} sm={12} lg={12} style={this.paddingStyle.col}>\n            <FormGroup>\n              <ControlLabel>{this.props.speaker.title}</ControlLabel>\n              <FormControl bsSize='lg' placeholder={this.props.speaker.title + ' Name'}\n                           value={this.props.speaker.name}\n                           onChange={this.handleChange}/>\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row style={this.paddingStyle.row}>\n          <Col xs={12} md={12} sm={12} lg={12} style={this.paddingStyle.col}>\n            {\n              this.props.speaker.fillerCounts.map((filler) => {\n                return <FillerWord filler={filler} onFillerCountChange={() => this.fillerCountChange(filler)}/>\n              })\n            }\n          </Col>\n        </Row>\n        </Grid>\n      </Form>\n    )\n  }\n}","import React, {Component} from 'react'\nimport {Modal, Button} from 'react-bootstrap';\n\nexport class OkCancelModel extends Component {\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modelTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {this.props.modelText}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button bsStyle='danger' bsSize='lg' onClick={() => this.props.handleResponse(true)}>{this.props.OkCaption}</Button>\n          <Button bsStyle='success' bsSize='lg'\n                  onClick={() => this.props.handleResponse(false)}>{this.props.CancelCaption}</Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}","export const roles = [\n  {\n    id: 1,\n    role: 'Presiding Officer'\n  },\n  {\n    id: 2,\n    role: 'Joke/Chuckle'\n  },\n  {\n    id: 3,\n    role: 'Toastmasters'\n  },\n  {\n    id: 4,\n    role: 'Speaker'\n  },\n  {\n    id: 5,\n    role: 'TableTopic Master'\n  },\n  {\n    id: 6,\n    role: 'TableTopic Speaker'\n  },\n  {\n    id: 7,\n    role: 'General Evaluator'\n  },\n  {\n    id: 8,\n    role: 'Evaluator'\n  },\n  {\n    id: 9,\n    role: 'Timer'\n  },\n  {\n    id: 10,\n    role: 'Grammarian'\n  }\n];","import React, {Component} from 'react'\nimport {Button, Modal, Grid, Row, FormGroup, ControlLabel, FormControl} from \"react-bootstrap\";\nimport {roles} from \"../data/roles\";\n\nexport class AddSpeaker extends Component{\n\n  paddingStyle = {\n    grid: {\n      paddingLeft: 5,\n      paddingRight: 5\n    },\n    row: {\n      marginLeft: 5,\n      marginRight: 5\n    },\n    col: {\n      paddingLeft: 5,\n      paddingRight: 5\n    }\n  };\n\n  role = null;\n  name = '';\n  handleRoleChange(e) {\n    let value = this.role.value;\n    this.setState((prevState) => {return {title: value, name: prevState.name}})\n  }\n\n  handleNameChange(e) {\n    let value = this.name.value;\n    this.setState((prevState) => {return {title: prevState.title, name: value}})\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      name: ''\n    };\n\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleRoleChange = this.handleRoleChange.bind(this);\n    this.onEntering = this.onEntering.bind(this);\n  }\n\n\n  onEntering() {\n    this.setState(() => {return {title:'', name: ''}})\n\n  }\n\n  render() {\n    return(\n      <Modal show={this.props.show} onEntering={this.onEntering}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add A Speaker</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Grid fluid style={this.paddingStyle.grid}>\n            <Row style={this.paddingStyle.row}>\n              <FormGroup>\n                <ControlLabel>Name</ControlLabel>\n                <FormControl type='text' bsSize='lg' placeholder='Name'\n                             value={this.state.name}\n                             onChange={this.handleNameChange}\n                            inputRef={ref => {this.name = ref;}}/>\n              </FormGroup>\n            </Row>\n            <Row style={this.paddingStyle.row}>\n              <FormGroup>\n                <ControlLabel>Role</ControlLabel>\n                <FormControl componentClass=\"select\" bsSize='lg'\n                             value={this.state.title}\n                             onChange={this.handleRoleChange}\n                             inputRef={ref => {this.role = ref;}}>\n                  <option value={null}> </option>\n                  {\n                    roles.map((role) => {\n                      return <option value={role.role}>{role.role}</option>\n                    })\n                  }\n                </FormControl>\n              </FormGroup>\n            </Row>\n          </Grid>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button bsStyle='success' onClick={() => this.props.handleResponse(this.state)}\n                  disabled={this.state.name === '' || this.state.title === ''}>\n            Save\n          </Button>\n          <Button bsStyle='danger' onClick={() => this.props.handleResponse(null)}>Cancel</Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n\n\n}","export const fillers = {\n  list: [\n    {filler: 'Ah', count: 0},\n    {filler: 'Um', count: 0},\n    {filler: 'Well', count: 0},\n    {filler: 'So', count: 0},\n    {filler: 'But', count: 0},\n    {filler: 'And', count: 0},\n    {filler: 'Like', count: 0},\n    {filler: 'You Know', count: 0},\n    {filler: 'Repeat', count: 0},\n    {filler: 'Other', count: 0},\n    {filler: 'Word Of The Day', count: 0}\n  ]\n};","import React, {Component} from 'react'\nimport {Button, Modal, Grid, Row, FormGroup, FormControl} from \"react-bootstrap\";\n\n\nexport class RemoveSpeaker extends Component{\n\n  paddingStyle = {\n    grid: {\n      paddingLeft: 5,\n      paddingRight: 5\n    },\n    row: {\n      marginLeft: 5,\n      marginRight: 5\n    },\n    col: {\n      paddingLeft: 5,\n      paddingRight: 5\n    }\n  };\n\n  deletePressCount = 0;\n  deleteTimeStart = Date.now();\n  speakerId = null;\n\n  constructor(props) {\n    super(props);\n    this.state = {speakerId:null};\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleSpeakerChange = this.handleSpeakerChange.bind(this);\n    this.onEntering = this.onEntering.bind(this);\n  }\n\n  handleDelete() {\n    if (this.deletePressCount === 0 || (Date.now() - this.deleteTimeStart)/1000 > 3) {\n      this.deleteTimeStart = Date.now();\n      this.deletePressCount = 0;\n    }\n    this.deletePressCount++;\n    if (this.deletePressCount === 4) {\n      this.props.handleResponse(this.state.speakerId)\n    }\n  }\n\n  handleSpeakerChange(e) {\n    this.deletePressCount = 0;\n    this.deleteTimeStart = Date.now();\n    const value = this.speakerId.value;\n    this.setState({speakerId: value});\n  }\n\n  onEntering() {\n    this.setState({speakerId: null})\n  }\n\n  render() {\n    return(\n      <Modal show={this.props.show} onEntering={this.onEntering}>\n        <Modal.Header closeButton>\n          <Modal.Title>Remove A Speaker</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Grid fluid style={this.paddingStyle.grid}>\n            <Row style={this.paddingStyle.row}>\n              <FormGroup>\n                <FormControl componentClass=\"select\" bsSize='lg'\n                             value={this.state.speakerId}\n                             onChange={this.handleSpeakerChange}\n                             inputRef={ref => {this.speakerId = ref}}>\n                  <option value={null} />\n                  {\n                    this.props.speakers.map((speaker) => {\n                      return <option value={speaker.id}>{speaker.title} : {speaker.name}</option>\n                    })\n                  }\n                </FormControl>\n              </FormGroup>\n            </Row>\n          </Grid>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button bsStyle='danger' onClick={this.handleDelete}\n                  disabled={this.state.name === '' || this.state.title === ''}>\n            Click/Press 4 Times To Delete\n          </Button>\n          <Button bsStyle='success' onClick={() => this.props.handleResponse(null)}>Cancel</Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n\n\n}","import React, {Component} from 'react';\nimport './App.css';\nimport MainMenu from \"./components/MainMenu\";\nimport {initialSpeakersList} from './data/list'\nimport {GrammarianSheet} from \"./components/GrammarianSheet\";\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\nimport {OkCancelModel} from \"./components/OkCancelModel\";\nimport {AddSpeaker} from \"./components/AddSpeaker\"\nimport {fillers} from \"./data/fillers\";\nimport {RemoveSpeaker} from \"./components/RemoveSpeaker\";\nimport {withRouter} from 'react-router-dom'\n\nclass App extends Component {\n  LOCAL_STORAGE_KEY = \"speakers\";\n  LOCAL_STORAGE_SPEAKER_INDEX = \"speakerIndex\";\n\n  getInitialSpeakerList() {\n    const savedSpeakers = localStorage.getItem(this.LOCAL_STORAGE_KEY);\n\n    let speakers = null;\n\n    if (savedSpeakers)\n      speakers = JSON.parse(savedSpeakers);\n    else\n      speakers = JSON.parse(JSON.stringify(initialSpeakersList));\n\n    return speakers;\n  }\n\n  getInitialSpeakerIndex(speakers) {\n    const speakerIndex = localStorage.getItem(this.LOCAL_STORAGE_SPEAKER_INDEX);\n    let index = 0;\n    if (speakerIndex) {\n      index = parseInt(speakerIndex, 10);\n      if (index >= speakers.list.length) index = 0;\n    }\n    return index;\n  }\n\n  constructor(props) {\n    super(props);\n\n    let speakers = this.getInitialSpeakerList();\n\n    this.state = {\n      allStates: {\n        speakers: speakers,\n        currentIndex: this.getInitialSpeakerIndex(speakers),\n        dropDownOpen: false,\n        clearModelShow: false,\n        addSpeakerShow: false,\n        removeSpeakerShow: false\n      }\n    };\n\n    this.handleRoleChange = this.handleRoleChange.bind(this);\n    this.handleDropDown = this.handleDropDown.bind(this);\n    this.handleClearModelResponse = this.handleClearModelResponse.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleAddSpeaker = this.handleAddSpeaker.bind(this);\n    this.handleRemoveSpeaker = this.handleRemoveSpeaker.bind(this);\n    this.handleAddSpeakerResponse = this.handleAddSpeakerResponse.bind(this);\n    this.handleRemoveSpeakerResponse = this.handleRemoveSpeakerResponse.bind(this);\n  }\n\n  findIndex(id) {\n    let speakers = this.state.allStates.speakers;\n    return speakers.list.findIndex((speaker) => {\n      return speaker.id === id\n    });\n  }\n\n  handleDropDown() {\n    this.setState(prevState => {\n      let all = prevState.allStates;\n      all.dropDownOpen = !prevState.allStates.dropDownOpen;\n      return {allStates: all}\n    });\n  }\n\n  handleRoleChange(id) {\n    const i = this.findIndex(id);\n    if (i < 0) return;\n    let allStates = this.state.allStates;\n    allStates.currentIndex = i;\n    localStorage.setItem(this.LOCAL_STORAGE_SPEAKER_INDEX, i);\n    this.setState({allStates: allStates})\n  }\n\n  handleGrammarianSheetChange(speaker) {\n    const i = this.findIndex(speaker.id);\n    if (i < 0) return;\n    let allStates = this.state.allStates;\n    allStates.speakers.list[i] = speaker;\n    localStorage.setItem(this.LOCAL_STORAGE_KEY, JSON.stringify(allStates.speakers));\n    this.setState(() => allStates);\n  }\n\n  handleClearModelResponse(isOk) {\n    let allStates = this.state.allStates;\n    if (isOk) {\n      localStorage.clear();\n\n      allStates.currentIndex = 0;\n      allStates.clearModelShow = false;\n      allStates.dropDownOpen = false;\n      allStates.speakers = JSON.parse(JSON.stringify(initialSpeakersList));\n\n    } else {\n      allStates.clearModelShow = false;\n    }\n    this.setState(() => allStates);\n  }\n\n  handleClear() {\n    let allStates = this.state.allStates;\n    allStates.clearModelShow = true;\n    this.setState(() => allStates);\n  }\n\n  handleAddSpeakerResponse(newSpeaker) {\n    let allStates = this.state.allStates;\n    allStates.addSpeakerShow = false;\n    if (newSpeaker !== null) {\n      allStates.speakers.list.push({\n        id: allStates.speakers.list.length + 1,\n        title: newSpeaker.title,\n        name: newSpeaker.name,\n        fillerCounts: fillers.list.map(a => Object.assign({}, a))\n      });\n      allStates.currentIndex = allStates.speakers.list.length - 1;\n      localStorage.setItem(this.LOCAL_STORAGE_KEY, JSON.stringify(allStates.speakers));\n    }\n    this.setState(() => allStates);\n\n  }\n\n  handleRemoveSpeakerResponse(speakerIdTobeRemoved) {\n    let allStates = this.state.allStates;\n    allStates.removeSpeakerShow = false;\n    if (speakerIdTobeRemoved !== null) {\n      const i = this.findIndex(parseInt(speakerIdTobeRemoved));\n      if (i >= 0 && i < allStates.speakers.list.length) {\n        allStates.speakers.list.splice(i, 1);\n        localStorage.setItem(this.LOCAL_STORAGE_KEY, JSON.stringify(allStates.speakers));\n      }\n    }\n    while(allStates.currentIndex >= allStates.speakers.list.length && allStates.currentIndex >= 0) {\n      allStates.currentIndex--;\n    }\n    this.setState(() => allStates);\n\n  }\n\n  handleAddSpeaker() {\n    let allStates = this.state.allStates;\n    allStates.addSpeakerShow = true;\n    this.setState(() => allStates);\n  }\n\n  handleRemoveSpeaker() {\n    let allStates = this.state.allStates;\n    allStates.removeSpeakerShow = true;\n    this.setState(() => allStates);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MainMenu data={this.state.allStates.speakers}\n                  handleSelect={this.handleRoleChange}\n                  handleDropDown={() => this.handleDropDown()}\n                  handleClear={this.handleClear}\n                  handleAddSpeaker={this.handleAddSpeaker}\n                  handleRemoveSpeaker={this.handleRemoveSpeaker}\n        />\n        {!this.state.allStates.dropDownOpen && this.state.allStates.speakers.list != null && this.state.allStates.speakers.list.length > 0 ?\n          <ReactCSSTransitionGroup\n            transitionName=\"fade\"\n            transitionAppear={true}\n            transitionAppearTimeout={1000}\n            transitionEnter={false}\n            transitionLeave={false}>\n            <GrammarianSheet key=\"1\"\n                             speaker={\n                               this.state.allStates.speakers.list[this.state.allStates.currentIndex < 0 ? 0 : this.state.allStates.currentIndex]\n                             }\n                             onGrammarianSheetChange={(speaker) => this.handleGrammarianSheetChange(speaker)}/>\n          </ReactCSSTransitionGroup>\n          :\n          null}\n        <OkCancelModel\n          handleResponse={(isOk) => this.handleClearModelResponse(isOk)}\n          show={this.state.allStates.clearModelShow}\n          OkCaption=\"Yes\"\n          CancelCaption=\"No\"\n          modelTitle=\"Warning\"\n          modelText=\"Do you want to clear the data ?\"\n        />\n\n        <AddSpeaker\n          handleResponse={this.handleAddSpeakerResponse}\n          show={this.state.allStates.addSpeakerShow} />\n\n        <RemoveSpeaker\n          handleResponse={this.handleRemoveSpeakerResponse}\n          show={this.state.allStates.removeSpeakerShow}\n          speakers={this.state.allStates.speakers.list}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React, {Component} from 'react'\nimport {withRouter} from \"react-router-dom\";\nimport {Button} from 'react-bootstrap'\n\nclass Settings extends Component {\n  render() {\n    return (<div>\n      <Button onClick={() => this.props.history.push(\"/\")}>\n        Back\n      </Button>\n      <h1>This page is under construction...</h1>\n    </div>);\n  }\n}\n\nexport default withRouter(Settings);\n","import React, {Component} from 'react'\nimport {HashRouter as Router, Route} from \"react-router-dom\";\nimport App from \"./App\";\nimport Settings from \"./components/Settings\";\n\nexport class AppRouter extends Component {\n\n  render() {\n    return <Router >\n      <div>\n        <Route exact path=\"/\" component={App}/>\n        <Route path=\"/settings\" component={Settings}/>\n      </div>\n    </Router>;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {AppRouter} from './routes.js'\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter />,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}